---
- name: Single-Node OpenShift (SNO) with GPU on Equinix Metal
  gather_facts: no
  hosts: localhost

  vars:
    temp_directory: "{{ playbook_dir }}/tmp"

  pre_tasks:

    - name: Install Python dependencies
      pip:
        name: aicli
        state: present

    - name: Make sure the temp directory exists
      file:
        path: "{{ temp_directory }}"
        state: directory

  tasks:

    - name: Create assisted cluster
      karmab.aicli.ai_cluster:
        name: "{{ cluster_name }}"
        state: present
        parameters:
          openshift_version: "{{ openshift_version }}"
          sno: true
          minimal: false
          pull_secret: "{{ pull_secret_path }}"
          base_dns_domain: "{{ openshift_base_domain }}"
          ssh_public_key: "{{ lookup('file', ssh_public_key) }}"
        offlinetoken: "{{ ocm_offline_token }}"

    - name: Read assisted cluster's InfraEnv for ISO download URL
      karmab.aicli.ai_infraenv_info:
        name: "{{ cluster_name }}"
        offlinetoken: "{{ ocm_offline_token }}"
      register: assisted_infraenv

    - name: Provision bastion host
      include_role:
        name: bastion
      vars:
        iso_download_url: "{{ assisted_infraenv.download_url }}"

    - name: Provision control nodes
      include_role:
        name: metal_nodes
      vars:
        machine_size: g2.large.x86 # c3.small.x86 for testing
        roles:
        - sno

    - name: Install OpenShift cluster
      include_role:
        name: empovit.assisted_openshift.cluster_installation

    - name: Update DNS entries
      include_role:
        name: empovit.assisted_openshift.etc_hosts
      vars:
        api_vip: "{{ assisted_cluster.api_vip }}"
        ingress_vip: "{{ assisted_cluster.ingress_vip }}"

    - name: Delete bastion host
      include_role:
        name: bastion
        tasks_from: destroy

    - name: Install GPU Operator
      include_role:
        name: empovit.gpu_operator
      vars:
        openshift_api_vip: "{{ assisted_cluster.api_vip }}"